import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { CenterLoading } from "@/shared/components/molecules/Loading";
import { ROUTES } from "@/shared/consts/route.const";
import { lazy, Suspense } from "react";
import { BrowserRouter, Route, Routes } from "react-router-dom";
import RootComponent from "../Common/RootComponent";
import { PrivateRoute } from "./Private.route";
import { SellerRoute } from "./Seller.route";
import { ErrorBoundary } from "react-error-boundary";
import ErrorFallback from "@/shared/components/molecules/ErrorFallback";
const HomePage = lazy(() => import("@/pages/HomePage"));
const ProductPage = lazy(() => import("@/pages/ProductPage"));
const ProductDetailPage = lazy(() => import("@/pages/ProductDetailPage"));
const CartPage = lazy(() => import("@/pages/CartPage"));
const MyPage = lazy(() => import("@/pages/MyPage"));
const MyOrderPage = lazy(() => import("@/pages/MyOrderPage"));
const MyOrderDetailPage = lazy(() => import("@/pages/MyOrderDetailPage"));
const OrderPage = lazy(() => import("@/pages/OrderPage"));
const OrderRedirectPage = lazy(() => import("@/pages/OrderRedirectPage"));
const SignInPage = lazy(() => import("@/pages/SignInPage"));
const SignupPage = lazy(() => import("@/pages/SignupPage"));
const SignupOAuthPage = lazy(() => import("@/pages/SignupOAuthPage"));
// 대시보드
const DashBoardPage = lazy(() => import("@/pages/DashBoardPage"));
const DashboardProductPage = lazy(() => import("@/pages/DashboardProductPage"));
const DashboardProductDetailPage = lazy(() => import("@/pages/DashboardProductDetailPage"));
const DashboardProductNewPage = lazy(() => import("@/pages/DashboardProductNewPage"));
const DashboardProductEditPage = lazy(() => import("@/pages/DashboardProductEditPage"));
const DashboardOrderPage = lazy(() => import("@/pages/DashboardOrderPage"));
export const Router = () => {
    return (_jsxs(BrowserRouter, { children: [_jsx(RootComponent, {}), _jsx(ErrorBoundary, { FallbackComponent: ErrorFallback, children: _jsx(Suspense, { fallback: _jsx(CenterLoading, {}), children: _jsxs(Routes, { children: [_jsx(Route, { path: ROUTES.HOME, element: _jsx(HomePage, {}) }), _jsx(Route, { path: ROUTES.SIGNIN, element: _jsx(SignInPage, {}) }), _jsx(Route, { path: ROUTES.SIGNUP, element: _jsx(SignupPage, {}) }), _jsx(Route, { path: ROUTES.SIGNUP__OAUTH, element: _jsx(SignupOAuthPage, {}) }), _jsx(Route, { path: ROUTES.PRODUCTS, element: _jsx(ProductPage, {}) }), _jsx(Route, { path: ROUTES.PRODUCTS_ID, element: _jsx(ProductDetailPage, {}) }), _jsxs(Route, { element: _jsx(PrivateRoute, {}), children: [_jsx(Route, { path: ROUTES.MY, element: _jsx(MyPage, {}) }), _jsx(Route, { path: ROUTES.MY__ORDERS, element: _jsx(MyOrderPage, {}) }), _jsx(Route, { path: ROUTES.MY__ORDERS_ID, element: _jsx(MyOrderDetailPage, {}) }), _jsx(Route, { path: ROUTES.CART, element: _jsx(CartPage, {}) }), _jsx(Route, { path: ROUTES.ORDERS_ID, element: _jsx(OrderPage, {}) }), _jsx(Route, { path: ROUTES.ORDERS_REDIRECT, element: _jsx(OrderRedirectPage, {}) }), _jsxs(Route, { element: _jsx(SellerRoute, {}), children: [_jsx(Route, { path: ROUTES.DASHBOARD, element: _jsx(DashBoardPage, {}) }), _jsx(Route, { path: ROUTES.DASHBOARD__PRODUCTS, element: _jsx(DashboardProductPage, {}) }), _jsx(Route, { path: ROUTES.DASHBOARD__PRODUCTS__NEW, element: _jsx(DashboardProductNewPage, {}) }), _jsx(Route, { path: ROUTES.DASHBOARD__PRODUCTS_ID, element: _jsx(DashboardProductDetailPage, {}) }), _jsx(Route, { path: ROUTES.DASHBOARD__PRODUCTS__EDIT_ID, element: _jsx(DashboardProductEditPage, {}) }), _jsx(Route, { path: ROUTES.DASHBOARD__ORDERS, element: _jsx(DashboardOrderPage, {}) })] })] })] }) }) })] }));
};
